{
  "description": "The system is centered around a FastAPI Application that serves as the primary entry point for all client interactions, managing API endpoints for job initiation and status retrieval. It delegates job creation to the Job Creator and interacts with the Job Database Interface for persistent storage, while the Job Status Manager oversees job lifecycle states. The Job Processor is an asynchronous component orchestrating the documentation generation pipeline, which now explicitly delegates code analysis to the Static Analyzer. The Static Analyzer is a critical subsystem, especially for TypeScript projects, leveraging a TypeScript LSP Client for deep language server interactions and a TypeScript Config Scanner for understanding project build contexts. Specialized GitHub Action Endpoints facilitate automated job initiation and status monitoring for GitHub workflows, interacting with the Job Creator, Job Processor, and Job Database Interface. This architecture highlights a clear separation of concerns, with the Static Analyzer providing enhanced language-specific analysis capabilities to the core Job Processor.",
  "components": [
    {
      "name": "FastAPI Application",
      "description": "The core web server, responsible for defining and managing API endpoints, handling incoming HTTP requests, and routing them to appropriate handlers for job initiation, status retrieval, and external integrations. It serves as the primary entry point for all client interactions.",
      "referenced_source_code": [
        {
          "qualified_name": "local_app.app",
          "reference_file": "local_app.py",
          "reference_start_line": null,
          "reference_end_line": null
        }
      ],
      "assigned_files": [
        "../../local_app.py"
      ],
      "can_expand": true
    },
    {
      "name": "Job Creator",
      "description": "Responsible for initializing new documentation generation job records. It assigns unique identifiers and sets the initial status (e.g., PENDING) for each new job, preparing it for processing.",
      "referenced_source_code": [
        {
          "qualified_name": "local_app.make_job",
          "reference_file": "local_app.py",
          "reference_start_line": null,
          "reference_end_line": null
        }
      ],
      "assigned_files": [],
      "can_expand": false
    },
    {
      "name": "Job Status Manager",
      "description": "Defines and manages the lifecycle states of documentation generation jobs (e.g., PENDING, RUNNING, COMPLETED, FAILED). It provides a consistent mechanism for updating and retrieving the current status of any job within the system.",
      "referenced_source_code": [
        {
          "qualified_name": "local_app.JobStatus",
          "reference_file": "local_app.py",
          "reference_start_line": null,
          "reference_end_line": null
        },
        {
          "qualified_name": "duckdb_crud.update_job",
          "reference_file": "duckdb_crud.py",
          "reference_start_line": null,
          "reference_end_line": null
        },
        {
          "qualified_name": "duckdb_crud.fetch_job",
          "reference_file": "duckdb_crud.py",
          "reference_start_line": null,
          "reference_end_line": null
        }
      ],
      "assigned_files": [],
      "can_expand": false
    },
    {
      "name": "Job Database Interface",
      "description": "Provides an abstraction layer for persistent storage and retrieval of job-related data. It encapsulates CRUD (Create, Read, Update, Delete) operations for job records, ensuring data integrity and accessibility across the API service.",
      "referenced_source_code": [
        {
          "qualified_name": "duckdb_crud.init_db",
          "reference_file": "duckdb_crud.py",
          "reference_start_line": null,
          "reference_end_line": null
        },
        {
          "qualified_name": "duckdb_crud.insert_job",
          "reference_file": "duckdb_crud.py",
          "reference_start_line": null,
          "reference_end_line": null
        },
        {
          "qualified_name": "duckdb_crud.fetch_job",
          "reference_file": "duckdb_crud.py",
          "reference_start_line": null,
          "reference_end_line": null
        },
        {
          "qualified_name": "duckdb_crud.update_job",
          "reference_file": "duckdb_crud.py",
          "reference_start_line": null,
          "reference_end_line": null
        },
        {
          "qualified_name": "duckdb_crud.fetch_all_jobs",
          "reference_file": "duckdb_crud.py",
          "reference_start_line": null,
          "reference_end_line": null
        }
      ],
      "assigned_files": [],
      "can_expand": false
    },
    {
      "name": "Job Processor",
      "description": "An asynchronous component that orchestrates the end-to-end documentation generation pipeline for a single job. It handles repository cloning, invokes the core analysis and generation logic (delegating to the Static Analyzer), and manages the processing results, updating job status throughout its execution.",
      "referenced_source_code": [
        {
          "qualified_name": "local_app.generate_onboarding",
          "reference_file": "local_app.py",
          "reference_start_line": null,
          "reference_end_line": null
        }
      ],
      "assigned_files": [],
      "can_expand": true
    },
    {
      "name": "Static Analyzer",
      "description": "Responsible for performing in-depth code analysis, particularly for TypeScript projects. It leverages an LSP client for language server interactions and a configuration scanner to understand project build settings, providing structured insights to the Job Processor.",
      "referenced_source_code": [
        {
          "qualified_name": "static_analyzer/scanner.py",
          "reference_file": "static_analyzer/scanner.py",
          "reference_start_line": null,
          "reference_end_line": null
        },
        {
          "qualified_name": "static_analyzer/lsp_client/client.py",
          "reference_file": "static_analyzer/lsp_client/client.py",
          "reference_start_line": null,
          "reference_end_line": null
        }
      ],
      "assigned_files": [],
      "can_expand": true
    },
    {
      "name": "TypeScript LSP Client",
      "description": "A specialized client within the Static Analyzer that interacts with the TypeScript Language Server Protocol. It enables sophisticated code understanding, symbol resolution, and semantic analysis for TypeScript projects.",
      "referenced_source_code": [
        {
          "qualified_name": "static_analyzer/lsp_client/typescript_client.py",
          "reference_file": "static_analyzer/lsp_client/typescript_client.py",
          "reference_start_line": null,
          "reference_end_line": null
        }
      ],
      "assigned_files": [],
      "can_expand": true
    },
    {
      "name": "TypeScript Config Scanner",
      "description": "A component within the Static Analyzer responsible for parsing and interpreting TypeScript configuration files (e.g., `tsconfig.json`). It extracts crucial project settings, build contexts, and file inclusions necessary for accurate static analysis.",
      "referenced_source_code": [
        {
          "qualified_name": "static_analyzer/typescript_config_scanner.py",
          "reference_file": "static_analyzer/typescript_config_scanner.py",
          "reference_start_line": null,
          "reference_end_line": null
        }
      ],
      "assigned_files": [],
      "can_expand": false
    },
    {
      "name": "GitHub Action Endpoints",
      "description": "A specialized set of API endpoints within the FastAPI Application designed for seamless integration with GitHub Actions workflows. These endpoints facilitate automated job initiation and status monitoring specifically for GitHub-driven documentation generation requests.",
      "referenced_source_code": [
        {
          "qualified_name": "local_app.start_docs_generation_job",
          "reference_file": "local_app.py",
          "reference_start_line": null,
          "reference_end_line": null
        },
        {
          "qualified_name": "local_app.get_github_action_job_status",
          "reference_file": "local_app.py",
          "reference_start_line": null,
          "reference_end_line": null
        }
      ],
      "assigned_files": [],
      "can_expand": false
    },
    {
      "name": "Unclassified",
      "description": "Component for all unclassified files and utility functions (Utility functions/External Libraries/Dependencies)",
      "referenced_source_code": [],
      "assigned_files": [],
      "can_expand": false
    }
  ],
  "components_relations": [
    {
      "relation": "initiates",
      "src_name": "FastAPI Application",
      "dst_name": "Job Processor"
    },
    {
      "relation": "delegates job creation to",
      "src_name": "FastAPI Application",
      "dst_name": "Job Creator"
    },
    {
      "relation": "interacts with",
      "src_name": "FastAPI Application",
      "dst_name": "Job Database Interface"
    },
    {
      "relation": "utilizes",
      "src_name": "FastAPI Application",
      "dst_name": "Job Status Manager"
    },
    {
      "relation": "uses",
      "src_name": "Job Creator",
      "dst_name": "Job Status Manager"
    },
    {
      "relation": "creates entries in",
      "src_name": "Job Creator",
      "dst_name": "Job Database Interface"
    },
    {
      "relation": "communicates with to update",
      "src_name": "Job Processor",
      "dst_name": "Job Database Interface"
    },
    {
      "relation": "uses to report progress to",
      "src_name": "Job Processor",
      "dst_name": "Job Status Manager"
    },
    {
      "relation": "delegates analysis to",
      "src_name": "Job Processor",
      "dst_name": "Static Analyzer"
    },
    {
      "relation": "uses to initiate jobs",
      "src_name": "GitHub Action Endpoints",
      "dst_name": "Job Creator"
    },
    {
      "relation": "triggers",
      "src_name": "GitHub Action Endpoints",
      "dst_name": "Job Processor"
    },
    {
      "relation": "interacts with to retrieve status",
      "src_name": "GitHub Action Endpoints",
      "dst_name": "Job Database Interface"
    },
    {
      "relation": "utilizes",
      "src_name": "Static Analyzer",
      "dst_name": "TypeScript LSP Client"
    },
    {
      "relation": "uses",
      "src_name": "Static Analyzer",
      "dst_name": "TypeScript Config Scanner"
    }
  ]
}

{
  "description": "CodeBoarding's local application (`local_app.LocalApp`) serves as the central entry point, handling requests from external clients like the VS Code extension (`vscode_runnable.VSCodeRunnable`). It orchestrates the core functionality of the platform, primarily delegating to the `diagram_analysis.diagram_generator` for comprehensive code analysis and diagram creation. The `local_app.LocalApp` also relies on `duckdb_crud.DuckDBCRUD` for persistent storage of job metadata and `repo_utils.RepoUtils` for repository operations. A critical subsystem for LLM interaction is managed by `agents.prompts.PromptFactory`, which, through an Abstract Factory pattern, dynamically provides prompts to the agents utilized by the `diagram_analysis.diagram_generator`, ensuring modularity and extensibility in integrating diverse LLMs and prompt strategies.",
  "components": [
    {
      "name": "local_app.LocalApp",
      "description": "Serves as the primary local interface for CodeBoarding, enabling local users and the VS Code extension to initiate, manage, and retrieve the status of analysis jobs, and to trigger documentation generation. It acts as a local API endpoint, orchestrating interactions with core analysis and data management components.",
      "referenced_source_code": [
        {
          "qualified_name": "local_app.LocalApp",
          "reference_file": "local_app.py",
          "reference_start_line": null,
          "reference_end_line": null
        }
      ]
    },
    {
      "name": "diagram_analysis.diagram_generator",
      "description": "Orchestrates the comprehensive code analysis and diagram generation workflow, initiated by the `local_app.LocalApp`. It's responsible for the core value proposition of the platform, leveraging various agents and LLMs for analysis.",
      "referenced_source_code": [
        {
          "qualified_name": "diagram_analysis.diagram_generator",
          "reference_file": "diagram_analysis/diagram_generator.py",
          "reference_start_line": null,
          "reference_end_line": null
        }
      ]
    },
    {
      "name": "agents.prompts.PromptFactory",
      "description": "Manages the dynamic selection and retrieval of prompts used by various agents for interacting with Large Language Models (LLMs). It has been refactored to leverage an Abstract Factory pattern, centralizing prompt definitions and enhancing modularity, configurability, and maintainability of LLM interactions. This pattern allows for easy integration of new LLMs and prompt strategies through concrete factory implementations (e.g., `gemini_flash_prompts_bidirectional.py`, `gemini_flash_prompts_unidirectional.py`) based on an abstract interface (`abstract_prompt_factory.py`).",
      "referenced_source_code": [
        {
          "qualified_name": "agents.prompts.prompt_factory.PromptFactory",
          "reference_file": "agents/prompts/prompt_factory.py",
          "reference_start_line": 29,
          "reference_end_line": 90
        }
      ]
    },
    {
      "name": "duckdb_crud.DuckDBCRUD",
      "description": "Manages persistent storage and retrieval of analysis job metadata and status, crucial for `local_app.LocalApp` to track and report on job progress.",
      "referenced_source_code": [
        {
          "qualified_name": "duckdb_crud.DuckDBCRUD",
          "reference_file": "duckdb_crud.py",
          "reference_start_line": null,
          "reference_end_line": null
        }
      ]
    },
    {
      "name": "repo_utils.RepoUtils",
      "description": "Provides repository-related operations such as cloning or fetching diffs, potentially utilized by `local_app.LocalApp` to prepare repositories for analysis.",
      "referenced_source_code": [
        {
          "qualified_name": "repo_utils.RepoUtils",
          "reference_file": "repo_utils/__init__.py",
          "reference_start_line": null,
          "reference_end_line": null
        }
      ]
    },
    {
      "name": "vscode_runnable.VSCodeRunnable",
      "description": "An external client that consumes services provided by the `local_app.LocalApp` for VS Code extension functionalities, representing a key external integration point.",
      "referenced_source_code": [
        {
          "qualified_name": "vscode_runnable.VSCodeRunnable",
          "reference_file": "vscode_runnable.py",
          "reference_start_line": null,
          "reference_end_line": null
        }
      ]
    },
    {
      "name": "Unclassified",
      "description": "Component for all unclassified files and utility functions (Utility functions/External Libraries/Dependencies)",
      "referenced_source_code": [
        {
          "qualified_name": "unclassified.UnclassifiedComponent",
          "reference_file": "<file_path>",
          "reference_start_line": 1,
          "reference_end_line": 10
        }
      ]
    },
    {
      "name": "Unclassified",
      "description": "Component for all unclassified files and utility functions (Utility functions/External Libraries/Dependencies)",
      "referenced_source_code": []
    }
  ],
  "components_relations": [
    {
      "relation": "initiates",
      "src_name": "vscode_runnable.VSCodeRunnable",
      "dst_name": "local_app.LocalApp"
    },
    {
      "relation": "orchestrates",
      "src_name": "local_app.LocalApp",
      "dst_name": "diagram_analysis.diagram_generator"
    },
    {
      "relation": "manages job data via",
      "src_name": "local_app.LocalApp",
      "dst_name": "duckdb_crud.DuckDBCRUD"
    },
    {
      "relation": "utilizes",
      "src_name": "local_app.LocalApp",
      "dst_name": "repo_utils.RepoUtils"
    },
    {
      "relation": "utilizes agents which obtain prompts from",
      "src_name": "diagram_analysis.diagram_generator",
      "dst_name": "agents.prompts.PromptFactory"
    },
    {
      "relation": "provides prompts to",
      "src_name": "agents.prompts.PromptFactory",
      "dst_name": "diagram_analysis.diagram_generator"
    }
  ]
}

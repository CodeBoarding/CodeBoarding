{
  "description": "The system orchestrates a Retrieval-Augmented Generation (RAG) process, managed by the `Application Orchestrator`. User queries are first processed by the `QueryProcessor` and embedded for similarity search within the `VectorStore`. The `DocumentRetriever` then fetches relevant documents, which are passed back to the `Application Orchestrator`. The `ResponseGenerator` crafts the final natural language response, leveraging a `PromptFactory` that centralizes and provides structured prompts for various Large Language Models, including specialized prompts for both Gemini Flash and Claude models. A separate `Static Analyzer` component operates independently, focusing on TypeScript configuration scanning.",
  "components": [
    {
      "name": "Application Orchestrator",
      "description": "Manages the overall application flow, coordinating interactions between QueryProcessor, DocumentRetriever, ResponseGenerator, and leveraging the PromptFactory for agent prompt generation. It receives user queries and delivers final responses, adapting its agent coordination mechanisms due to recent core agent logic refactoring and the new prompt management system.",
      "referenced_source_code": [
        {
          "qualified_name": "agents.agent",
          "reference_file": "agents/agent.py",
          "reference_start_line": null,
          "reference_end_line": null
        }
      ]
    },
    {
      "name": "QueryProcessor",
      "description": "Handles incoming user queries, embeds them, and prepares them for similarity search, potentially utilizing refined prompts from the PromptFactory for enhanced query understanding.",
      "referenced_source_code": [
        {
          "qualified_name": "langchain_core.embeddings.Embeddings:embed_query",
          "reference_file": ".",
          "reference_start_line": null,
          "reference_end_line": null
        }
      ]
    },
    {
      "name": "VectorStore",
      "description": "Stores and retrieves document embeddings based on similarity search.",
      "referenced_source_code": [
        {
          "qualified_name": "langchain_community.vectorstores.chroma.Chroma:similarity_search",
          "reference_file": "langchain_community/vectorstores/chroma.py",
          "reference_start_line": null,
          "reference_end_line": null
        }
      ]
    },
    {
      "name": "DocumentRetriever",
      "description": "Retrieves relevant documents from the vector store.",
      "referenced_source_code": [
        {
          "qualified_name": "langchain_core.retrievers.BaseRetriever:get_relevant_documents",
          "reference_file": ".",
          "reference_start_line": null,
          "reference_end_line": null
        }
      ]
    },
    {
      "name": "ResponseGenerator",
      "description": "Generates a natural language response using a large language model based on the query and retrieved documents, now significantly enhanced by leveraging structured prompts from the PromptFactory, including specialized prompts for models like Gemini Flash and Claude.",
      "referenced_source_code": [
        {
          "qualified_name": "langchain_core.language_models.llms.BaseLLM:invoke",
          "reference_file": ".",
          "reference_start_line": null,
          "reference_end_line": null
        }
      ]
    },
    {
      "name": "PromptFactory",
      "description": "Centralizes the creation and management of prompts for various agents and language models through an abstract factory pattern. It provides a structured and standardized approach to prompt generation, leveraging an AbstractPromptFactory interface and specialized implementations like GeminiFlashPromptsBidirectional, GeminiFlashPromptsUnidirectional, ClaudePromptsBidirectional, and ClaudePromptsUnidirectional. This ensures consistent and optimized interactions with LLMs, notably for Gemini Flash and Claude models, by managing an expanded library of prompts.",
      "referenced_source_code": [
        {
          "qualified_name": "prompt_factory.PromptFactory",
          "reference_file": "agents/prompts/prompt_factory.py",
          "reference_start_line": 29,
          "reference_end_line": 98
        }
      ]
    },
    {
      "name": "Static Analyzer",
      "description": "A new, independent functional area responsible for performing static analysis, specifically focusing on scanning TypeScript configurations. This component operates in parallel to the core RAG system, providing distinct capabilities without directly altering the RAG data flow.",
      "referenced_source_code": [
        {
          "qualified_name": "static_analyzer.typescript_config_scanner",
          "reference_file": "static_analyzer/typescript_config_scanner.py",
          "reference_start_line": null,
          "reference_end_line": null
        }
      ]
    },
    {
      "name": "Unclassified",
      "description": "Component for all unclassified files and utility functions (Utility functions/External Libraries/Dependencies)",
      "referenced_source_code": []
    }
  ],
  "components_relations": [
    {
      "relation": "initiates",
      "src_name": "Application Orchestrator",
      "dst_name": "QueryProcessor"
    },
    {
      "relation": "requests prompts from",
      "src_name": "Application Orchestrator",
      "dst_name": "PromptFactory"
    },
    {
      "relation": "embeds query for",
      "src_name": "QueryProcessor",
      "dst_name": "VectorStore"
    },
    {
      "relation": "requests retrieval from",
      "src_name": "Application Orchestrator",
      "dst_name": "DocumentRetriever"
    },
    {
      "relation": "queries",
      "src_name": "DocumentRetriever",
      "dst_name": "VectorStore"
    },
    {
      "relation": "provides documents to",
      "src_name": "DocumentRetriever",
      "dst_name": "Application Orchestrator"
    },
    {
      "relation": "sends context to",
      "src_name": "Application Orchestrator",
      "dst_name": "ResponseGenerator"
    },
    {
      "relation": "utilizes prompts from",
      "src_name": "ResponseGenerator",
      "dst_name": "PromptFactory"
    },
    {
      "relation": "returns response to",
      "src_name": "ResponseGenerator",
      "dst_name": "Application Orchestrator"
    },
    {
      "relation": "operates independently",
      "src_name": "Static Analyzer",
      "dst_name": "Application Orchestrator"
    }
  ]
}
